// <copyright file="ExtensionMethodsTest.Capitalize.g.cs">Copyright ©  2011</copyright>
// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace Capitalise
{
    public partial class ExtensionMethodsTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ExtensionMethodsTest))]
[ExpectedException(typeof(ArgumentNullException))]
public void CapitalizeThrowsArgumentNullException354()
{
    string s;
    s = this.Capitalize((string)null);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionMethodsTest))]
public void Capitalize983()
{
    string s;
    s = this.Capitalize("");
    Assert.AreEqual<string>("", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionMethodsTest))]
public void Capitalize870()
{
    string s;
    s = this.Capitalize("\0");
    Assert.AreEqual<string>("", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionMethodsTest))]
public void Capitalize704()
{
    string s;
    s = this.Capitalize(".");
    Assert.AreEqual<string>("_", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionMethodsTest))]
public void Capitalize439()
{
    string s;
    s = this.Capitalize("a");
    Assert.AreEqual<string>("A", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionMethodsTest))]
public void Capitalize582()
{
    string s;
    s = this.Capitalize("a\0");
    Assert.AreEqual<string>("A", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionMethodsTest))]
public void Capitalize669()
{
    string s;
    s = this.Capitalize("aa");
    Assert.AreEqual<string>("Aa", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionMethodsTest))]
public void Capitalize538()
{
    string s;
    s = this.Capitalize("aaa");
    Assert.AreEqual<string>("Aaa", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionMethodsTest))]
public void Capitalize57()
{
    string s;
    s = this.Capitalize("aaaa.\0");
    Assert.AreEqual<string>("Aaaa_", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionMethodsTest))]
public void Capitalize819()
{
    string s;
    s = this.Capitalize("aaaa.a.");
    Assert.AreEqual<string>("Aaaa_A_", s);
}
[TestMethod]
[PexGeneratedBy(typeof(ExtensionMethodsTest))]
public void Capitalize160()
{
    string s;
    s = this.Capitalize("aaAb.a...aA.a.A.a\0\0\0\0");
    Assert.AreEqual<string>("AaAb_A___AA_A_A_A", s);
}
    }
}
