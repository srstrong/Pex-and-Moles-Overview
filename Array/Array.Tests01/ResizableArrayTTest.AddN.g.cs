// <auto-generated>
// This file contains automatically generated unit tests.
// Do NOT modify this file manually.
// 
// When Pex is invoked again,
// it might remove or update any previously generated unit tests.
// 
// If the contents of this file becomes outdated, e.g. if it does not
// compile anymore, you may delete this file and invoke Pex again.
// </auto-generated>
using System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using Microsoft.Pex.Framework.Generated;

namespace Array
{
    public partial class ResizableArrayTTest
    {
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
[PexRaisedException(typeof(NullReferenceException))]
public void AddNThrowsNullReferenceException200()
{
    this.AddN<int>(0, (int[])null);
}
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
public void AddN119()
{
    int[] ints = new int[0];
    this.AddN<int>(0, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
public void AddN316()
{
    int[] ints = new int[1];
    this.AddN<int>(1, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
[PexRaisedException(typeof(OverflowException))]
public void AddNThrowsOverflowException517()
{
    this.AddN<int>(int.MinValue, (int[])null);
}
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
public void AddN398()
{
    int[] ints = new int[2];
    this.AddN<int>(1, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
public void AddN764()
{
    int[] ints = new int[2];
    this.AddN<int>(2, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
[PexRaisedException(typeof(IndexOutOfRangeException))]
public void AddNThrowsIndexOutOfRangeException826()
{
    int[] ints = new int[5];
    this.AddN<int>(2, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
[PexRaisedException(typeof(AssertFailedException))]
public void AddNThrowsAssertFailedException441()
{
    int[] ints = new int[2];
    ints[1] = 1;
    this.AddN<int>(1, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
[PexRaisedException(typeof(AssertFailedException))]
public void AddNThrowsAssertFailedException896()
{
    int[] ints = new int[2];
    ints[0] = int.MinValue;
    ints[1] = -2147483647;
    this.AddN<int>(1, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
[PexRaisedException(typeof(AssertFailedException))]
public void AddNThrowsAssertFailedException539()
{
    int[] ints = new int[2];
    ints[0] = 10;
    ints[1] = 11;
    this.AddN<int>(1, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
[PexRaisedException(typeof(AssertFailedException))]
public void AddNThrowsAssertFailedException136()
{
    int[] ints = new int[2];
    ints[1] = int.MaxValue;
    this.AddN<int>(1, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
[PexRaisedContractException]
public void AddNThrowsContractException155()
{
    int[] ints = new int[6];
    this.AddN<int>(2, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
public void AddN693()
{
    int[] ints = new int[1];
    this.AddN<int>(0, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
[PexRaisedContractException]
public void AddNThrowsContractException492()
{
    int[] ints = new int[12];
    this.AddN<int>(7, ints);
}
[TestMethod]
[PexGeneratedBy(typeof(ResizableArrayTTest))]
[PexRaisedContractException]
public void AddNThrowsContractException3()
{
    int[] ints = new int[3];
    this.AddN<int>(1, ints);
}
    }
}
